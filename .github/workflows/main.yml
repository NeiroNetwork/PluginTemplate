name: build

on:
  push:
    tags:
      - v*

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        path: plugins/${{ github.event.repository.name }}

    - name: Download pmmp files
      run: |
        curl -JLOs "https://jenkins.pmmp.io/job/PHP-7.4-Linux-x86_64/lastSuccessfulBuild/artifact/PHP_Linux-x86_64.tar.gz" &
        curl -JLOs "https://jenkins.pmmp.io/job/PocketMine-MP/lastSuccessfulBuild/artifact/DevTools.phar" &
        curl -JLOs "https://jenkins.pmmp.io/job/PocketMine-MP/lastSuccessfulBuild/artifact/PocketMine-MP.phar" &
        wait
        mv DevTools.phar plugins

    - name: Prepare php binary
      run: |
        echo "$(pwd)/bin/php7/bin" >> $GITHUB_PATH
        tar -xzf PHP_Linux-x86_64.tar.gz
        EXTENSION_DIR=$(find "$(pwd)/bin" -name *debug-zts*)
        echo "extension_dir=\"$EXTENSION_DIR\"" >> bin/php7/bin/php.ini
        sed -i "s/date.timezone=.*/date.timezone=Asia\\/Tokyo/" bin/php7/bin/php.ini

    - name: Build plugin
      run: |
        echo -e "makeplugin ${{ github.event.repository.name }}\nstop\n" | \
          php PocketMine-MP.phar --no-wizard \
          --disable-ansi \
          --disable-readline \
          --auto-report.enabled=0 \
          --anonymous-statistics.enabled=0 \
          --auto-updater.enabled=0 \
          --settings.enable-dev-builds=1

    - name: Check log
      run: |
        if [ $(grep -c "ERROR\|CRITICAL\|EMERGENCY" "server.log") -ne 0 ]; then exit 1; fi

    - name: Create github release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: |
          plugin_data/DevTools/${{ github.event.repository.name }}_v*.phar